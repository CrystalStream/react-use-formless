{"version":3,"sources":["../../dist/index.es.js","FormExample/index.js","App.js","serviceWorker.js","index.js"],"names":["index_es_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","index_es_slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","sliceIterator","TypeError","index_es_useFormless","_ref","_ref2","initialValues","_ref2$validate","validate","_useState","node_modules_react","_useState2","values","setValues","_useState3","_useState4","errors","setErrors","_useState5","_useState6","touched","setTouched","_useState7","_useState8","isValid","setValid","setValue","name","touchValue","Error","error","setError","validateValues","fullErrors","keys","every","setValuesAsTouched","reduce","acc","reset","setAllValues","submitProps","_ref3","onSuccess","onError","onSubmit","ev","preventDefault","inputFieldProps","onInput","_ref4","onBlur","FormExample","isHidden","_useFormless","useFormless","email","checkbox","select","radioButton","username","useState","slicedToArray","showNotification","toggleNotification","handleInput","_ref3$target","setColorToInput","joinString","success","danger","getErrorMessageToInput","react_default","a","createElement","react","bloomer_min","isColor","onClick","rows","className","is-hidden","JSON","stringify","isSize","action","type","placeholder","onChange","_ref4$target","checked","isGrouped","textArea","App","view","changeViewTo","hasShadow","isBrand","isMenu","isFluid","hasTextColor","FormExample_FormExample","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15eaf6fa.chunk.js","sourcesContent":["import { useState } from 'react';\n\nvar defineProperty = function defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar useFormless = function useFormless(_ref, _ref2) {\n  var initialValues = _ref.initialValues;\n  var _ref2$validate = _ref2.validate,\n      validate = _ref2$validate === undefined ? function () {\n    return true;\n  } : _ref2$validate;\n\n  var _useState = useState(initialValues || {}),\n      _useState2 = slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = slicedToArray(_useState3, 2),\n      errors = _useState4[0],\n      setErrors = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = slicedToArray(_useState5, 2),\n      touched = _useState6[0],\n      setTouched = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = slicedToArray(_useState7, 2),\n      isValid = _useState8[0],\n      setValid = _useState8[1];\n\n  var setError = function setError(name) {\n    if (typeof validate !== 'function') {\n      throw Error('validate option should be a function');\n    }\n\n    var error = validate({\n      values: values\n    })[name];\n    setErrors(_extends({}, errors, defineProperty({}, name, error)));\n  };\n\n  var setValue = function setValue(name, value) {\n    setValues(_extends({}, values, defineProperty({}, name, value)));\n  };\n\n  var touchValue = function touchValue(name) {\n    setError(name);\n    setTouched(_extends({}, touched, defineProperty({}, name, true)));\n  };\n\n  var reset = function reset() {\n    setTouched({});\n    setErrors({});\n    setValues(initialValues);\n    setValid(false);\n  };\n\n  var setAllValues = function setAllValues(values) {\n    setValuesAsTouched();\n    setValues(values);\n    validateValues(values);\n  };\n\n  var validateValues = function validateValues(values) {\n    var fullErrors = validate({\n      values: values\n    });\n    var isValid = Object.keys(fullErrors).every(function (name) {\n      return fullErrors[name] === '';\n    });\n    setErrors(fullErrors);\n    setValuesAsTouched();\n    setValid(isValid);\n    return isValid;\n  }; // DOM props\n\n\n  var submitProps = function submitProps(_ref3) {\n    var onSuccess = _ref3.onSuccess,\n        onError = _ref3.onError;\n    return {\n      onSubmit: function onSubmit(ev) {\n        var isValid = validateValues(values);\n\n        if (!isValid) {\n          ev.preventDefault();\n          onError();\n        } else {\n          onSuccess();\n        }\n      }\n    };\n  };\n\n  var inputFieldProps = function inputFieldProps(name) {\n    return {\n      name: name,\n      value: values[name],\n      onInput: function onInput(_ref4) {\n        var value = _ref4.target.value;\n        return setValue(name, value);\n      },\n      onBlur: function onBlur() {\n        return touchValue(name);\n      }\n    };\n  }; // Privated Functions\n\n\n  var setValuesAsTouched = function setValuesAsTouched() {\n    setTouched(Object.keys(values).reduce(function (acc, name) {\n      return _extends({}, acc, defineProperty({}, name, true));\n    }, {}));\n  };\n\n  return {\n    // Variables\n    values: values,\n    touched: touched,\n    errors: errors,\n    reset: reset,\n    isValid: isValid,\n    // Actions\n    setAllValues: setAllValues,\n    setValue: setValue,\n    touchValue: touchValue,\n    validateValues: validateValues,\n    // DOM props\n    submitProps: submitProps,\n    inputFieldProps: inputFieldProps\n  };\n};\n\nexport { useFormless };","import React, { useState, Fragment } from 'react';\nimport { Title, Field, Input, Label, Control, Select, TextArea, Checkbox, Radio, Button, Help, Notification, Delete } from \"bloomer\";\nimport joinString from \"classnames\";\n\nimport { useFormless } from \"react-useformless\";\n\nexport const FormExample = ({isHidden}) => {\n  const FIELD_REQUIRED = 'This field is required';\n  const SELECT_FIELD = 'Please select this field';\n  const NOTIFICATION_MESSAGE_SUCCESS = 'Success message here!';\n  const NOTIFICATION_MESSAGE_FAILED = 'Validations form has failed, please check the fields again!';\n  const validate = ({ values }) => ({\n    name: values.name === '' ? FIELD_REQUIRED : '',\n    email: values.email  === '' ? FIELD_REQUIRED : '',\n    username: values.username === '' ? FIELD_REQUIRED : '',\n    select: values.select === '' ? FIELD_REQUIRED : '',\n    checkbox: !values.checkbox ? SELECT_FIELD : '',\n  });\n\n  const { values, errors, touched, setValue, touchValue, isValid, reset, setAllValues, submitProps, inputFieldProps } = useFormless({\n    initialValues: {\n      name: '',\n      email: 'juan@amezQA',\n      checkbox: false,\n      select: '',\n      radioButton: 'yes'\n    }\n  }, { validate });\n\n  const [showNotification, toggleNotification] = useState(false);\n\n  const onSuccess = () => {\n    toggleNotification(true);\n  }\n\n  const onError = () => {\n    toggleNotification(true);\n  }\n\n  const handleInput = ({target: { name, value }}) => {\n    setValue(name, value);\n    toggleNotification(false);\n  }\n\n  const setColorToInput = name =>\n    joinString({\n      success: errors[name] === '',\n      danger: errors[name] && touched[name],\n    });\n\n  const getErrorMessageToInput = name =>\n    joinString({ [errors[name]]: errors[name] && touched[name] });\n\n  return (\n    <Fragment>\n      <Notification isHidden={!showNotification} isColor={joinString({ success: isValid, danger: !isValid })}>\n        <Delete onClick={() => toggleNotification(false)} />\n        {isValid ? NOTIFICATION_MESSAGE_SUCCESS : NOTIFICATION_MESSAGE_FAILED}\n      </Notification>\n      <TextArea rows={10} className={joinString({'is-hidden': isHidden})} value={JSON.stringify({ values, touched, errors }, null, 2)}>\n      </TextArea>\n      <Title isHidden={!showNotification} isSize={1}>Form example</Title>\n      <form action=\"\" {...submitProps({onSuccess, onError})} className={joinString({'is-hidden': isHidden})}>\n        <Field>\n          <Label>Name</Label>\n          <Control>\n            <Input\n              isColor={setColorToInput('name')}\n              type=\"text\"\n              placeholder='Your name'\n              value={values.name}\n              name='name'\n              onInput={handleInput}\n              onBlur={() => touchValue('name')}\n              />\n          </Control>\n          <Help isColor='danger'>{getErrorMessageToInput('name')}</Help>\n        </Field>\n\n        <Field>\n          <Label>Username</Label>\n          <Control>\n            <Input\n              isColor={setColorToInput('username')}\n              type=\"text\"\n              placeholder='Your username'\n              {...inputFieldProps('username')}\n              />\n          </Control>\n          <Help isColor='danger'>{getErrorMessageToInput('username')}</Help>\n        </Field>\n\n        <Field>\n          <Label>Email</Label>\n          <Control>\n            <Input\n              isColor={setColorToInput('email')}\n              placeholder='You email'\n              value={values.email}\n              name='email'\n              onInput={handleInput}\n              onBlur={() => touchValue('email')}\n              />\n          </Control>\n          <Help isColor='danger'>{getErrorMessageToInput('email')}</Help>\n        </Field>\n\n        <Field>\n          <Label>Select:</Label>\n          <Control>\n            <Select\n              isColor={setColorToInput('select')}\n              {...inputFieldProps('select')}\n              >\n              <option value=''>Gender</option>\n              <option value='M'>Male</option>\n              <option value='F'>Female</option>\n            </Select>\n          </Control>\n          <Help isColor='danger'>{getErrorMessageToInput('select')}</Help>\n        </Field>\n\n        <Field>\n          <Label>Message</Label>\n          <Control>\n            <TextArea\n              {...inputFieldProps('textArea')}\n              placeholder={'<TextArea />'}\n              />\n          </Control>\n          <Help isColor='danger'>{getErrorMessageToInput('textArea')}</Help>\n        </Field>\n\n        <Field>\n          <Control>\n            <Checkbox\n              onChange={({ target: { name, checked } }) => setValue(name, checked)}\n              checked={values.checkbox}\n              name='checkbox'\n              onBlur={() => touchValue('checkbox')}\n              >\n              I agree\n            </Checkbox>\n          </Control>\n          <Help isColor='danger'>{getErrorMessageToInput('checkbox')}</Help>\n        </Field>\n\n        <Field>\n          <Control>\n            <Radio\n              name=\"radioButton\"\n              value=\"yes\"\n              checked={values.radioButton === 'yes'}\n              onChange={handleInput}\n              onBlur={() => touchValue('radioButton')}\n              >\n              Yes\n            </Radio>\n            <Radio\n              name=\"radioButton\"\n              value=\"no\"\n              checked={values.radioButton === 'no'}\n              onChange={handleInput}\n              onBlur={() => touchValue('radioButton')}\n              >\n              No\n            </Radio>\n          </Control>\n        </Field>\n\n        <Field isGrouped>\n          <Control>\n            <Button isColor='primary' type=\"submit\">Submit</Button>\n          </Control>\n          <Control>\n            <Button isColor='info' onClick={reset}>Reset</Button>\n          </Control>\n          <Control>\n            <Button\n              isColor='link'\n              onClick={() => setAllValues({name: 'default name', email: 'default email', checkbox: true, radioButton: 'no', select: 'M', textArea: 'text area example'})}\n              >\n              set new values\n            </Button>\n          </Control>\n        </Field>\n      </form>\n    </Fragment>\n  );\n};\n","import React, { useState, Fragment } from 'react';\n\nimport 'bulma';\nimport { Container, Nav, NavLeft, NavItem, NavRight, Button, Columns, Column, Menu, MenuList, MenuLabel, MenuLink, Section } from \"bloomer\";\n\nimport { FormExample } from './FormExample';\n\nconst App = () => {\n  const [view, changeViewTo] = useState('');\n  return (\n    <Fragment>\n      <Nav hasShadow>\n        <NavLeft>\n          <NavItem isBrand>React Hooks Training</NavItem>\n        </NavLeft>\n        <NavRight isMenu>\n          <NavItem>\n            <Button isColor=\"success\">\n              Go to home\n            </Button>\n          </NavItem>\n        </NavRight>\n      </Nav>\n      <Section>\n        <Container isFluid>\n          <Columns>\n            <Column isSize=\"1/4\">\n              <Menu>\n                <MenuLabel>Custom hooks</MenuLabel>\n                <MenuList>\n                  <li><MenuLink hasTextColor=\"grey-light\" onClick={() => changeViewTo('Register')}>useForm</MenuLink></li>\n                </MenuList>\n              </Menu>\n            </Column>\n            <Column isSize='3/4'>\n              <FormExample isHidden={view !== 'Register'}/>\n            </Column>\n          </Columns>\n        </Container>\n      </Section>\n    </Fragment>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}